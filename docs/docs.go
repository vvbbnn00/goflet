// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "vvbbnn00",
            "url": "https://github.com/vvbbnn00/goflet",
            "email": "vvbbnn00@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/action/copy": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Copy a file from one location to another, if you want to move a file, use the move action instead.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Action"
                ],
                "summary": "Copy File",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/action.CopyMoveFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "File exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/action/create": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Create an empty file at the specified path, if the file already exists, the operation will fail.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Action"
                ],
                "summary": "Create File",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/action.CreateFileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "File created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "File exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/action/move": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Move a file from one location to another, the performance of moving is better than copying.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Action"
                ],
                "summary": "Move File",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/action.CopyMoveFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "File exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/image/{path}": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Get processed image, {path} should be the relative path of the file, starting from the root directory, e.g. /image/path/to/image.jpg",
                "produces": [
                    "image/jpeg",
                    " image/png",
                    " image/gif"
                ],
                "tags": [
                    "Image"
                ],
                "summary": "Get Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Width",
                        "name": "w",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Height",
                        "name": "h",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Quality, 0-100",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "jpg",
                            "png",
                            "gif"
                        ],
                        "type": "string",
                        "description": "Format",
                        "name": "f",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Angle, 0-360",
                        "name": "a",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "fit",
                            "fill",
                            "resize",
                            "fit_width",
                            "fit_height"
                        ],
                        "type": "string",
                        "description": "Scale type",
                        "name": "s",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/meta/{path}": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Get the file meta data, {path} should be the relative path of the file, starting from the root directory, e.g. /meta/path/to/file.txt",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Get File Meta",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FileInfo"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/onlyoffice/{path}": {
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "OnlyOffice callback for file updates, when the status is 2, the file has been updated, {path} should be the relative path of the file, starting from the root directory, e.g. /onlyoffice/path/to/file.txt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OnlyOffice"
                ],
                "summary": "OnlyOffice Callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "OnlyOffice update request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/onlyoffice.onlyOfficeUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/file/{path}": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Download a file by path, supports range requests, {path} should be the relative path of the file, starting from the root directory, e.g. /file/path/to/file.txt",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "File"
                ],
                "summary": "File Download",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "Cache-Control": {
                                "type": "string",
                                "description": "max-age=3600"
                            },
                            "Content-Disposition": {
                                "type": "string",
                                "description": "attachment; filename=file.txt"
                            },
                            "Content-Length": {
                                "type": "string",
                                "description": "1024"
                            },
                            "Content-Type": {
                                "type": "string",
                                "description": "application/octet-stream"
                            },
                            "ETag": {
                                "type": "string",
                                "description": "686897696a7c876b7e"
                            },
                            "Last-Modified": {
                                "type": "string",
                                "description": "Mon, 02 Jan 2006 15:04:05 GMT"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Upload a small file using a POST request, {path} should be the relative path of the file, starting from the root directory, e.g. /file/path/to/file.txt",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "File",
                    "Upload"
                ],
                "summary": "Upload Small File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "File not found or upload not started",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "File completion in progress",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "413": {
                        "description": "File too large, please use PUT method to upload large files",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Delete a file by path, {path} should be the relative path of the file, starting from the root directory, e.g. /file/path/to/file.txt",
                "tags": [
                    "File"
                ],
                "summary": "Delete File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "File not found or upload not started",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "head": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Download a file by path, supports range requests, {path} should be the relative path of the file, starting from the root directory, e.g. /file/path/to/file.txt",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "File"
                ],
                "summary": "File Download",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "Cache-Control": {
                                "type": "string",
                                "description": "max-age=3600"
                            },
                            "Content-Disposition": {
                                "type": "string",
                                "description": "attachment; filename=file.txt"
                            },
                            "Content-Length": {
                                "type": "string",
                                "description": "1024"
                            },
                            "Content-Type": {
                                "type": "string",
                                "description": "application/octet-stream"
                            },
                            "ETag": {
                                "type": "string",
                                "description": "686897696a7c876b7e"
                            },
                            "Last-Modified": {
                                "type": "string",
                                "description": "Mon, 02 Jan 2006 15:04:05 GMT"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/upload/{path}": {
            "put": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Create an upload session with a partial file upload, supports range requests, {path} should be the relative path of the file, starting from the root directory, e.g. /file/path/to/file.txt",
                "consumes": [
                    "*/*"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Partial File Upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Directory creation not allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Complete an upload session with a partial file upload. You should first upload the file with a PUT request, then complete the upload with a POST request, {path} should be the relative path of the file, starting from the root directory, e.g. /file/path/to/file.txt",
                "tags": [
                    "Upload"
                ],
                "summary": "Complete Partial File Upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "File not found or upload not started",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "File completion in progress",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Cancel an upload session, {path} should be the relative path of the file, starting from the root directory, e.g. /upload/path/to/file.txt",
                "tags": [
                    "Upload"
                ],
                "summary": "Cancel Upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Upload session not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "action.CopyMoveFileRequest": {
            "type": "object",
            "required": [
                "onConflict",
                "sourcePath",
                "targetPath"
            ],
            "properties": {
                "onConflict": {
                    "description": "OnConflict is the action to take when the file already exists",
                    "allOf": [
                        {
                            "$ref": "#/definitions/action.OnConflictAction"
                        }
                    ]
                },
                "sourcePath": {
                    "description": "SourcePath is the path of the file to copy",
                    "type": "string"
                },
                "targetPath": {
                    "description": "TargetPath is the path where the file will be copied",
                    "type": "string"
                }
            }
        },
        "action.CreateFileRequest": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "path": {
                    "description": "Path is the path where the file will be created",
                    "type": "string"
                }
            }
        },
        "action.OnConflictAction": {
            "type": "string",
            "enum": [
                "overwrite",
                "abort"
            ],
            "x-enum-varnames": [
                "OnConflictActionOverwrite",
                "OnConflictActionAbort"
            ]
        },
        "model.FileHash": {
            "type": "object",
            "properties": {
                "md5": {
                    "type": "string"
                },
                "sha1": {
                    "type": "string"
                },
                "sha256": {
                    "type": "string"
                }
            }
        },
        "model.FileInfo": {
            "type": "object",
            "properties": {
                "fileMeta": {
                    "description": "The metadata of the file",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.FileMeta"
                        }
                    ]
                },
                "filePath": {
                    "description": "Relative path to the base file storage path",
                    "type": "string"
                },
                "fileSize": {
                    "description": "The size of the file",
                    "type": "integer"
                },
                "lastModified": {
                    "description": "The last modified time of the file",
                    "type": "integer"
                }
            }
        },
        "model.FileMeta": {
            "type": "object",
            "properties": {
                "fileName": {
                    "description": "The name of the file",
                    "type": "string"
                },
                "hash": {
                    "description": "The hash of the file",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.FileHash"
                        }
                    ]
                },
                "mimeType": {
                    "description": "The mime type of the file",
                    "type": "string"
                },
                "relativePath": {
                    "description": "The relative path to the base file storage path",
                    "type": "string"
                },
                "uploadedAt": {
                    "description": "The time the file was uploaded",
                    "type": "integer"
                }
            }
        },
        "onlyoffice.onlyOfficeUpdateRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "2 for update",
                    "type": "integer"
                },
                "url": {
                    "description": "The URL of the file",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Authorization": {
            "description": "You need to provide a valid jwt token in the header, in headers, you should provide a key-value pair like this: Authorization: Bearer xxxxxx; The token has the same effect as the token in the query string, but it is more secure than the token in the query string. Or you can just provide the token in the query string, like this: ?token=xxxxxx. More info about jwt: https://github.com/vvbbnn00/goflet?tab=readme-ov-file#authentication-method",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "unknown",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Goflet API",
	Description:      "Goflet is a lightweight file upload and download service written in Go.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
